
[36m=====================default_constructor=====================
[0m
empty() : 1
size    : 0
capacity: 0
arr     :


[36m=====================fill constructor=====================
[0m
empty() : 0
size    : 42
capacity: 42
arr     :
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 

[36m=====================fill with val constructor=====================
[0m
size    : 42
capacity: 42
arr     :
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 

[36m=====================copy constructor=====================
[0m
size    : 21
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 

[35m>>> action made: [0m[35mCopy of base made[0m
size    : 21
capacity: 21
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 

[36m=====================resize=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[35m>>> action made: [0m[35mresize from 42 to 21 made with val 7[0m
size    : 21
capacity: 42
arr     :
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 

[35m>>> action made: [0m[35mresize from 42 to 63 made with val 7[0m
size    : 63
capacity: 84
arr     :
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 

[35m>>> action made: [0m[35mresize from 63 to 0 made with val 7[0m
size    : 0
capacity: 84
arr     :


[35m>>> action made: [0m[35mresize from 42 to 100 made with val 7[0m
size    : 100
capacity: 100
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 

[35m>>> action made: [0m[35mresize from 42 to 102 made with val 7 where capacity is 100[0m
size    : 102
capacity: 200
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 

[35m>>> action made: [0m[35mresize to more then max size[0m
vector
size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[36m=====================reserve_test=====================
[0m
base_state: 42 vector filled with range and empty container


[35m>>> action made: [0m[35mreserve 0 to both containers[0m
size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
size    : 0
capacity: 0
arr     :


[35m>>> action made: [0m[35mreserve 42 to both containers[0m
size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
size    : 0
capacity: 42
arr     :


[35m>>> action made: [0m[35mreserve 63 to 42 container[0m
size    : 42
capacity: 63
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[35m>>> action made: [0m[35mreserve 150 to above container[0m
size    : 42
capacity: 150
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[35m>>> action made: [0m[35mreserve more then max size to above[0m
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
size    : 42
capacity: 150
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[36m=====================assignment operator test=====================
[0m
base_state: 42 vector filled with range and empty container

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[35m>>> action made: [0m[35massign base to empty container[0m
size    : 0
capacity: 42
arr     :


[35m>>> action made: [0m[35massign empty to fool[0m
size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[36m=====================iterator_test=====================
[0m
base_state: 42 vector filled with range and empty container

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[35m>>> action made: [0m[35mdereferencing following iterators[0m
begin: 0
end - 1: 41
rbegin: 41
rend - 1: 0

[35m>>> action made: [0m[35msame but vector is const and full of 7s now[0m

[36m=====================element access test=====================
[0m
base_state: 42 vector filled with range and empty container

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :


[35m>>> action made: [0m[35mat with exceeding range parameter[0m
vector

[35m>>> action made: [0m[35mtaking address for empty and value for full[0m
Front empty: 0x0
Front full: 0
Back empty: 0xfffffffffffffff0
Back full: 41

[36m=====================assign range test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: empty vector with 100 capacity

size    : 0
capacity: 1000
arr     :

base_state: 10 vector filled with range


[36m=====================assign range test=====================
[0m

[35m>>> action made: [0m[35massign full with range from empty[0m
size    : 0
capacity: 42
arr     :


[35m>>> action made: [0m[35massign empty with range from full with arithmetics[0m
size    : 32
capacity: 32
arr     :
5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
25 26 27 28 29 30 31 32 33 34 35 36 
size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[35m>>> action made: [0m[35massign to full 42 from small vector[0m
size    : 10
capacity: 42
arr     :
10 11 12 13 14 15 16 17 18 19 
size    : 10
capacity: 10
arr     :
10 11 12 13 14 15 16 17 18 19 

[35m>>> action made: [0m[35massign to big capacity empty from above[0m
size    : 10
capacity: 1000
arr     :
10 11 12 13 14 15 16 17 18 19 

[36m=====================assign range test=====================
[0m

[35m>>> action made: [0m[35massign to full vector with range from itself[0m
size    : 10
capacity: 42
arr     :
10 11 12 13 14 15 16 17 18 19 
size    : 10
capacity: 42
arr     :
10 11 12 13 14 15 16 17 18 19 

[35m>>> action made: [0m[35massign to vector above with range from itself + arithmetics[0m
size    : 10
capacity: 42
arr     :
10 11 12 13 14 15 16 17 18 19 
size    : 4
capacity: 42
arr     :
13 14 15 16 

[36m=====================assign range test=====================
[0m

[35m>>> action made: [0m[35mtry to assign from incorrect range from itself[0m
vector
size    : 0
capacity: 0
arr     :


[35m>>> action made: [0m[35mtry to assign from above max size iterator from itself[0m
vector
size    : 0
capacity: 0
arr     :


[36m=====================assign fill test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: empty vector with 100 capacity

size    : 0
capacity: 1000
arr     :


[36m=====================assign fill test=====================
[0m

[35m>>> action made: [0m[35massign to empty with 42 sevens[0m
size    : 42
capacity: 42
arr     :
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 

[35m>>> action made: [0m[35massign to full with 42 sevens[0m
size    : 42
capacity: 42
arr     :
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 

[35m>>> action made: [0m[35massign to big capacity empty with 42 sevens[0m
size    : 42
capacity: 1000
arr     :
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 

[35m>>> action made: [0m[35massign to above with 0 sevens[0m
size    : 0
capacity: 1000
arr     :


[36m=====================push back test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: empty vector with 100 capacity

size    : 0
capacity: 1000
arr     :


[36m=====================push back test=====================
[0m

[35m>>> action made: [0m[35mpush back seven to empty[0m
size    : 1
capacity: 1
arr     :
7 

[35m>>> action made: [0m[35mpush back a val from the end of itself to full[0m
size    : 43
capacity: 84
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 41 

[35m>>> action made: [0m[35mpush back a seven to big cap empty[0m
size    : 1
capacity: 1000
arr     :
7 

[36m=====================pop back test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: 10 vector filled with range

size    : 10
capacity: 10
arr     :
10 11 12 13 14 15 16 17 18 19 

[36m=====================pop back test=====================
[0m

[35m>>> action made: [0m[35mten times pop back from full[0m
size    : 32
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 

[36m=====================small stuff test=====================
[0m

[35m>>> action made: [0m[35mreturn size of above - size() test[0m
32

[35m>>> action made: [0m[35mreturn size of above - max_size() test[0m
1152921504606846975

[35m>>> action made: [0m[35mreturn arr of above - data() test[0m
0x7f8427c02a80

[36m=====================swap test=====================
[0m

[35m>>> action made: [0m[35mswap full and small[0m
size    : 10
capacity: 10
arr     :
10 11 12 13 14 15 16 17 18 19 
size    : 32
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 

[35m>>> action made: [0m[35mswap again with swap(x, y)[0m
size    : 32
capacity: 32
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 
size    : 10
capacity: 42
arr     :
10 11 12 13 14 15 16 17 18 19 

[35m>>> action made: [0m[35mswap again with std swap[0m
size    : 10
capacity: 42
arr     :
10 11 12 13 14 15 16 17 18 19 
size    : 32
capacity: 32
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 

[36m=====================insert value test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: empty vector with 100 capacity

size    : 0
capacity: 1000
arr     :


[36m=====================insert value test=====================
[0m

[35m>>> action made: [0m[35minsert a seven to begin of full[0m
size    : 43
capacity: 84
arr     :
7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 
39 40 41 

[35m>>> action made: [0m[35minsert a seven to end of above[0m
size    : 44
capacity: 84
arr     :
7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 
39 40 41 7 

[35m>>> action made: [0m[35minsert a seven to begin of big cap empty[0m
size    : 1
capacity: 1000
arr     :
7 

[36m=====================insert value test=====================
[0m

[35m>>> action made: [0m[35minsert numbers to begin of empty[0m
size    : 2
capacity: 2
arr     :
42 7 

[35m>>> action made: [0m[35minsert to begin of above a value from begin of itself[0m
size    : 3
capacity: 4
arr     :
42 42 7 

[35m>>> action made: [0m[35minsert to end of above a value from end of itself[0m
size    : 4
capacity: 4
arr     :
42 42 7 7 

[35m>>> action made: [0m[35minsert to begin of above a value from end of itself[0m
size    : 5
capacity: 8
arr     :
7 42 42 7 7 

[35m>>> action made: [0m[35minsert to end of above a value from begin of itself[0m
size    : 6
capacity: 8
arr     :
7 42 42 7 7 7 

[36m=====================insert fill test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: empty vector with 100 capacity

size    : 0
capacity: 1000
arr     :


[36m=====================insert fill test=====================
[0m

[35m>>> action made: [0m[35minsert five sevens to begin of full[0m
size    : 47
capacity: 84
arr     :
7 7 7 7 7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
35 36 37 38 39 40 41 

[35m>>> action made: [0m[35minsert five sevens to end of full[0m
size    : 52
capacity: 84
arr     :
7 7 7 7 7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
35 36 37 38 39 40 41 7 7 7 7 7 

[35m>>> action made: [0m[35minsert five sevens to begin of big cap empty[0m
size    : 5
capacity: 1000
arr     :
7 7 7 7 7 

[36m=====================insert fill test=====================
[0m

[35m>>> action made: [0m[35minsert numbers to begin of empty[0m
size    : 2
capacity: 2
arr     :
42 7 

[35m>>> action made: [0m[35minsert to begin of above 5 times value from begin of itself[0m
size    : 7
capacity: 7
arr     :
42 42 42 42 42 42 7 

[35m>>> action made: [0m[35minsert to end of above 5 times value from end of itself[0m
size    : 12
capacity: 14
arr     :
42 42 42 42 42 42 7 7 7 7 7 7 

[35m>>> action made: [0m[35minsert to begin of above 5 times value from end of itself[0m
size    : 17
capacity: 28
arr     :
7 7 7 7 7 42 42 42 42 42 42 7 7 7 7 7 7 

[35m>>> action made: [0m[35minsert to end of above 5 times value from begin of itself[0m
size    : 22
capacity: 28
arr     :
7 7 7 7 7 42 42 42 42 42 42 7 7 7 7 7 7 7 7 7 
7 7 

[36m=====================insert range test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: empty vector with 100 capacity

size    : 0
capacity: 1000
arr     :

base_state: 10 vector filled with range


[36m=====================insert range test=====================
[0m

[35m>>> action made: [0m[35minsert to end of empty with range from full and arithmetics[0m
size    : 32
capacity: 32
arr     :
5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
25 26 27 28 29 30 31 32 33 34 35 36 
size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 

[35m>>> action made: [0m[35minsert to end of above with range from other[0m
size    : 52
capacity: 84
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 10 11 12 13 14 15 16 17 18 19 

[35m>>> action made: [0m[35minsert to begin of big cap empty with range from other[0m
size    : 10
capacity: 1000
arr     :
10 11 12 13 14 15 16 17 18 19 

[36m=====================insert range test=====================
[0m

[35m>>> action made: [0m[35minsert to begin of small with range from itself[0m
size    : 20
capacity: 20
arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 

[35m>>> action made: [0m[35minsert to end of above with range from itself[0m
size    : 40
capacity: 40
arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 

[35m>>> action made: [0m[35minsert to end of above with range from itself and arithmetics[0m
size    : 74
capacity: 80
arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 

[35m>>> action made: [0m[35mtry to insert to above from incorrect range from itself[0m
size    : 74
capacity: 80
arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 

[35m>>> action made: [0m[35mtry to insert to above from incorrect max size iterator from itself[0m
size    : 74
capacity: 80
arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 

[36m=====================erase test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :


[36m=====================erase test=====================
[0m

[35m>>> action made: [0m[35merase the beginning from 42 full vector[0m
return value: 1
size    : 41
capacity: 42
arr     :
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
41 

[35m>>> action made: [0m[35merase the end from above[0m
return value: 0
size    : 40
capacity: 42
arr     :
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 

[35m>>> action made: [0m[35merase from the 10th element of above[0m
return value: 12
size    : 39
capacity: 42
arr     :
1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 
22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 

[36m=====================erase range=====================
[0m

[35m>>> action made: [0m[35merase range from above and arithmetics[0m
return value: 36
size    : 10
capacity: 42
arr     :
1 2 3 4 5 36 37 38 39 40 

[35m>>> action made: [0m[35merase full range from above[0m
return value: 0
size    : 0
capacity: 42
arr     :


[36m=====================clear test=====================
[0m
base_state: 42 vector filled with range

size    : 42
capacity: 42
arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 
base_state: empty vector

size    : 0
capacity: 0
arr     :

base_state: empty vector with 100 capacity

size    : 0
capacity: 1000
arr     :

base_state: 10 vector filled with range and 100 capacity


[36m=====================clear test=====================
[0m

[35m>>> action made: [0m[35mclear empty[0m
size    : 0
capacity: 0
arr     :


[35m>>> action made: [0m[35mclear big cap empty[0m
size    : 0
capacity: 1000
arr     :


[35m>>> action made: [0m[35mclear full[0m
size    : 0
capacity: 42
arr     :


[35m>>> action made: [0m[35mclear big cap full[0m
size    : 0
capacity: 1000
arr     :


[36m=====================relational operators test=====================
[0m
base_state: 42 vector filled with sevens

base_state: empty vector

base_state: empty vector with 100 capacity

base_state: 10 vector filled with sevens and 100 capacity


[36m=====================relational operators test=====================
[0m

[35m>>> action made: [0m[35mare each of 4 vectors equal to themselves[0m
1
1
1
1

[35m>>> action made: [0m[35mare each of 4 vectors unequal to themselves[0m
0
0
0
0

[35m>>> action made: [0m[35mtest >[0m
empty > empty cap: 0
empty_cap > empty: 0
testy > testy_cap: 1
testy_cap > testy: 0

[35m>>> action made: [0m[35mtest <[0m
empty < empty cap: 0
empty_cap < empty: 0
testy < testy_cap: 0
testy_cap < testy: 1

[35m>>> action made: [0m[35mtest >=[0m
empty >= empty cap: 1
empty_cap >= empty: 1
testy >= testy_cap: 1
testy_cap >= testy: 0

[35m>>> action made: [0m[35mtest <=[0m
empty <= empty cap: 1
empty_cap <= empty: 1
testy <= testy_cap: 0
testy_cap <= testy: 1

[36m=====================const iterators test=====================
[0m
base_state: 42 vector filled with range

base_state: 42 const vector filled with range and iterator

0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 

[35m>>> action made: [0m[35mcompare end it with begin it[0m
comparison > : 1
comparison >= : 1
comparison < : 0
comparison <= : 0
comparison == : 0
difference: 41
it_begin + 1: 1
1 + it_begin: 1
++it_begin: 1
--it_begin: 0

[35m>>> action made: [0m[35mtest const reverse iterator from non const vector[0m
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 

[36m=====================reverse iterators test=====================
[0m
base_state: 42 vector filled with range

base_state: 42 const vector filled with range and reverse iterator

41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 

[35m>>> action made: [0m[35mcompare end it with begin it but now reverse[0m
comparison > : 1
comparison >= : 1
comparison < : 0
comparison <= : 0
comparison == : 0
difference: 41
it_begin + 1: 40
1 + it_begin: 40
++it_begin: 40
--it_begin: 41

[35m>>> action made: [0m[35mtest const iterator from non const vector[0m
41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 
[36m=====================vector relational operators test=====================
[0m
base_state: two vectors: big and small


[35m>>> action made: [0m[35mtest comparison between vectors,  first is big, second is small[0m
test operator > : 1
test operator >= : 1
test operator < : 0
test operator <= : 0
test operator == : 0
test operator != : 1

[36m=====================const and non const iterators comparison=====================
[0m
base_state: two vectors and two end iterators: bigger non const and smaller const


[35m>>> action made: [0m[35mtest comparison between vectors, first is big non const, second is small const[0m
test operator > : 0
test operator >= : 0
test operator < : 1
test operator <= : 1
test operator == : 0
test operator != : 1

[35m>>> action made: [0m[35mnow same thing but reverse iterators end rbegin[0m
test operator > : 0
test operator >= : 0
test operator < : 1
test operator <= : 1
test operator == : 0
test operator != : 1
